shiny::runApp()
runApp()
getwd()
setwd("~")
getwd()
setwd("~/Documents/INFO 201/Group-Project-EasyA/")
df <- read.csv("grade_data.csv")
View(df)
runApp('~/Documents/INFO 201/a8-building-apps-zubinchopra')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('~/Documents/INFO 201/a8-building-apps-zubinchopra')
runApp('Course-GPA')
getwd()
df <- read.csv("grade_data.csv")
View(df)
View(df)
data.frame <- read.csv("grade_data.csv")
df <- read.table("data/cereal.tsv", header = T)
View(df)
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
getwd()
runApp('Course-GPA')
getwd()
getwd()
setwd('/Users/Macbook/Documents/INFO 201/Group-Project-EasyA')
setwd('/Users/Macbook/Documents/INFO 201/Group-Project-EasyA')
source('./Course-GPA/scripts/buildPlot.R')
setwd('/Users/Macbook/Documents/INFO 201/Group-Project-EasyA')
runApp('Course-GPA')
data.frame <- read.csv("Analyze_department_GPA/full_data.csv")
View(data.frame)
data.frame <- read.csv("Analyze_department_GPA/full_data.csv")
unique.course <- unique(data.frame$Course_Title)
unique.course
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
df <- read.csv("Analyze_department_GPA/full_data.csv")
runApp('Course-GPA')
runApp('Course-GPA')
departments <- df %>% filter(Course_Title == input$course.var)
shinyServer(function(input, output) {
departments <- df %>% filter(Course_Title == input$course.var)
output$depControl <- renderUI({
tagList(
selectInput('dep', 'Choose Department', choices = list())
)
})
output$plotly <- renderPlotly({
# return(BuildPlot(df, input$course.var, input$year.var))
})
})
runApp('Course-GPA')
shinyServer(function(input, output) {
departments <- reactive(df %>% filter(Course_Title == input$course.var))
output$depControl <- renderUI({
tagList(
selectInput('dep', 'Choose Department', choices = list())
)
})
output$plotly <- renderPlotly({
# return(BuildPlot(df, input$course.var, input$year.var))
})
})
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
shinyServer(function(input, output) {
dep.df <- reactive({
df %>% filter(Course_Title == input$course.var)
})
})
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
shinyServer(function(input, output) {
reactive.var <- reactive({
input$course.var
})
dep.df <- df %>% filter(Course_Title == reactive.var)
unique.dep <- unique(dep.df$department)
output$depControl <- renderUI({
selectInput('dep.var', label = 'Select Department', choices = unique.dep)
})
})
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
df <- read.csv("Analyze_department_GPA/full_data.csv")
x <- df %>% filter(Course_Title == 'Title')
View(x)
x <- df %>% filter(Course_Title == 'SPECIAL TOPICS')
View(x)
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
x <- df %>% filter(Course_Title == 'SPECIAL TOPICS')
View(x)
x <- filter(df, Course_Title == 'SPECIAL TOPICS')
x <- filter(df, Course_Title == 'SPECIAL TOPICS')$departments
x <- filter(df, Course_Title == 'SPECIAL TOPICS')$department
View(x)
x <- filter(df, Course_Title == 'SPECIAL TOPICS')
y <- unique(x$Course_Title)
y <- x$Course_Title
df <- read.csv("Analyze_department_GPA/full_data.csv", stringsAsFactors = F)
y <- x$Course_Title
x <- filter(df, Course_Title == 'SPECIAL TOPICS')
y <- x$Course_Title
y
y <- unique(x$department_name)
y
a <- reactive({
x <- filter(df, Course_Title == 'SPECIAL TOPICS')
y <- unique(x$department_name)
return(y)
})
output$depControl <- renderUI({
selectInput('dep.var', 'Select Department', choices = a())
})
shinyServer(function(input, output) {
a <- reactive({
x <- filter(df, Course_Title == 'SPECIAL TOPICS')
y <- unique(x$department_name)
return(y)
})
output$depControl <- renderUI({
selectInput('dep.var', 'Select Department', choices = a())
})
})
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
getwd()
df <- read.csv("Analyze_department_GPA/full_data.csv", stringsAsFactors = F)
runApp('Course-GPA')
runApp('Course-GPA')
getwd()
setwd
setwd(""/Users/Macbook/Documents/INFO 201/Group-Project-EasyA"")
setwd("/Users/Macbook/Documents/INFO 201/Group-Project-EasyA")
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
setwd("~/Documents/INFO 201/Group-Project-EasyA/")
runApp('Course-GPA')
getwd()
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
runApp('Course-GPA')
