setwd("~/Documents/School/info201/Group-Project-EasyA")
library(stringr)
library(dplyr)
library(plotly)
library(XML)
grade_data <- read.csv("grade_data.csv", stringsAsFactors = FALSE)
majors <- "http://www.washington.edu/students/reg/depttools/tsupdate/major.php"
major.list <- readHTMLTable(majors, header=TRUE, stringsAsFactor = FALSE)
major.table <-bind_rows(major.list)
colnames(major.table) <- c("department", "department_name")
major.table <- major.table %>% mutate(department_name = trimws(str_match(department_name, '[^();]*'))) %>%
distinct(department, .keep_all = TRUE)
grade_data <- grade_data %>% mutate(department = trimws(str_match(Course_Number, '[^0-9]*'))[,1]) %>% left_join(major.table)
new_data <- grade_data %>% group_by(department, department_name, Term) %>% summarize(classes = n(), class_size = mean(Student_Count), mean_gpa = mean(Average_GPA))
map <- plot_ly(new_data, x = new_data$class_size, y = new_data$mean_gpa, color = "blue")
setwd("~/Desktop/Group-Project-EasyA")
library(stringr)
library(dplyr)
library(plotly)
library(XML)
grade_data <- read.csv("grade_data.csv", stringsAsFactors = FALSE)
majors <- "http://www.washington.edu/students/reg/depttools/tsupdate/major.php"
major.list <- readHTMLTable(majors, header=TRUE, stringsAsFactor = FALSE)
major.table <-bind_rows(major.list)
colnames(major.table) <- c("department", "department_name")
major.table <- major.table %>% mutate(department_name = trimws(str_match(department_name, '[^();]*'))) %>%
distinct(department, .keep_all = TRUE)
grade_data <- grade_data %>% mutate(department = trimws(str_match(Course_Number, '[^0-9]*'))[,1]) %>% left_join(major.table)
new_data <- grade_data %>% group_by(department, department_name, Term) %>% summarize(classes = n(), class_size = mean(Student_Count), mean_gpa = mean(Average_GPA))
map <- plot_ly(new_data, x = new_data$class_size, y = new_data$mean_gpa, color = "blue")
install.packages("XML")
library(XML)
grade_data <- read.csv("grade_data.csv", stringsAsFactors = FALSE)
majors <- "http://www.washington.edu/students/reg/depttools/tsupdate/major.php"
#install.packages("XML")
library(stringr)
library(dplyr)
library(plotly)
library(XML)
grade_data <- read.csv("grade_data.csv", stringsAsFactors = FALSE)
majors <- "http://www.washington.edu/students/reg/depttools/tsupdate/major.php"
major.list <- readHTMLTable(majors, header=TRUE, stringsAsFactor = FALSE)
major.table <-bind_rows(major.list)
colnames(major.table) <- c("department", "department_name")
major.table <- major.table %>% mutate(department_name = trimws(str_match(department_name, '[^();]*'))) %>%
distinct(department, .keep_all = TRUE)
grade_data <- grade_data %>% mutate(department = trimws(str_match(Course_Number, '[^0-9]*'))[,1]) %>% left_join(major.table)
new_data <- grade_data %>% group_by(department, department_name, Term) %>% summarize(classes = n(), class_size = mean(Student_Count), mean_gpa = mean(Average_GPA))
map <- plot_ly(new_data, x = new_data$class_size, y = new_data$mean_gpa, color = "blue")
View(new_data)
View(grade_data)
my.data <- grade_data %>%
filter(department_name == "NA") %>%
select(department, department_name)
my.data <- grade_data %>%
filter(department_name == "NA") %>%
select(department, department_name)
my.data <- grade_data %>%
filter(department_name == "NA") %>%
select(department)
my.data <- grade_data %>%
filter(department_name == "NA") %>%
select(department)
my.data <- grade_data %>%
select(department_name)
my.data
View(my.data)
my.data <- grade_data %>%
filter(department_name)
flatten(grade_data)
library(jsonlite)
flatten(grade_data)
my.data <- grade_data %>%
select(department, department_name) %>%
filter(is.na)
flatten(grade_data)
my.data <- grade_data %>%
select(department, department_name) %>%
filter(is.na)
View(department_name)
my.data <- grade_data %>%
select(department, department_name) %>%
filter(is.na())
my.data <- grade_data %>%
select(department, department_name) %>%
filter(is.na(department_name))
my.data <- grade_data %>%
select(department, department_name) %>%
filter(is.na(department_name))
my.data <- grade_data %>%
select(department, department_name) %>%
filter(department_name != NA)
grade_data <- flatten(grade_data)
my.data <- grade_data %>%
select(department, department_name) %>%
filter(department_name != NA)
grade_data2 <- flatten(grade_data)
my.data <- grade_data2 %>%
select(department, department_name) %>%
filter(department_name != NA)
grade_data$department_name
grade_data2$department_name %>% flatten()
grade_data2 <- flatten(grade_data$department_name)
typeof(grade_data2$department_name)
test <- grade_data2$department_name
View(test)
test <- as.dataframe(grade_data2$department_name)
test <- as.data.frame(grade_data2$department_name)
View(test)
View(test)
test$abr <- grade_data2$department
View(test)
new.data <- full_join(grade_data2, test, by = c("department" == "abr"))
test <- as.data.frame(grade_data2$department_name)
test$abr <- grade_data2$department
new.data <- full_join(grade_data2, test, by = c("department" == "abr"))
new.data <- full_join(grade_data, test, by = c("department" == "abr"))
major.table <- major.table %>%
distinct(department, .keep_all = TRUE)
# Set your working directory
#install.packages("XML")
library(stringr)
library(dplyr)
library(plotly)
library(XML)
library(jsonlite)
grade_data <- read.csv("grade_data.csv", stringsAsFactors = FALSE)
majors <- "http://www.washington.edu/students/reg/depttools/tsupdate/major.php"
major.list <- readHTMLTable(majors, header=TRUE, stringsAsFactor = FALSE)
major.table <-bind_rows(major.list)
colnames(major.table) <- c("department", "department_name")
major.table <- major.table %>%
distinct(department, .keep_all = TRUE)
grade_data <- grade_data %>% mutate(department = trimws(str_match(Course_Number, '[^0-9]*'))[,1]) %>% left_join(major.table)
test <- as.data.frame(grade_data2$department_name)
test$abr <- grade_data2$department
new.data <- full_join(grade_data, test, by = c("department" == "abr"))
# new_data <- grade_data %>% group_by(department, department_name, Term) %>% summarize(classes = n(), class_size = mean(Student_Count), mean_gpa = mean(Average_GPA))
# map <- plot_ly(new_data, x = new_data$class_size, y = new_data$mean_gpa, color = "blue")
my.data <- grade_data2 %>%
select(department, department_name) %>%
filter(department_name != NA)
View(major.table)
typeof(major.table)
typeof(major.table$department_name)
grade_data2 <- grade_data %>% mutate(department = trimws(str_match(Course_Number, '[^0-9]*'))[,1]) %>% left_join(major.table)
rm(list = ls())
# Set your working directory
#install.packages("XML")
library(stringr)
library(dplyr)
library(plotly)
library(XML)
library(jsonlite)
grade_data <- read.csv("grade_data.csv", stringsAsFactors = FALSE)
majors <- "http://www.washington.edu/students/reg/depttools/tsupdate/major.php"
major.list <- readHTMLTable(majors, header=TRUE, stringsAsFactor = FALSE)
major.table <-bind_rows(major.list)
colnames(major.table) <- c("department", "department_name")
major.table <- major.table %>% mutate(department_name = trimws(str_match(department_name, '[^();]*'))) %>%
distinct(department, .keep_all = TRUE)
grade_data2 <- grade_data %>% mutate(department = trimws(str_match(Course_Number, '[^0-9]*'))[,1]) %>% left_join(major.table)
test <- as.data.frame(grade_data2$department_name)
test$abr <- grade_data2$department
new.data <- full_join(grade_data, test, by = c("department" == "abr"))
# new_data <- grade_data %>% group_by(department, department_name, Term) %>% summarize(classes = n(), class_size = mean(Student_Count), mean_gpa = mean(Average_GPA))
# map <- plot_ly(new_data, x = new_data$class_size, y = new_data$mean_gpa, color = "blue")
my.data <- grade_data2 %>%
select(department, department_name) %>%
filter(department_name != NA)
View(grade_data2)
typeof(grade_data2$department_name)
rm(list = ls())
# Set your working directory
#install.packages("XML")
library(stringr)
library(dplyr)
library(plotly)
library(XML)
library(jsonlite)
grade_data <- read.csv("grade_data.csv", stringsAsFactors = FALSE)
majors <- "http://www.washington.edu/students/reg/depttools/tsupdate/major.php"
major.list <- readHTMLTable(majors, header=TRUE, stringsAsFactor = FALSE)
major.table <-bind_rows(major.list)
colnames(major.table) <- c("department", "department_name")
major.table <- major.table %>% mutate(department_name = trimws(str_match(department_name, '[^();]*'))) %>%
distinct(department, .keep_all = TRUE)
grade_data2 <- grade_data %>% mutate(department = trimws(str_match(Course_Number, '[^0-9]*'))[,1]) %>% left_join(major.table)
test <- as.data.frame(major.table$department_name)
test$abr <- grade_data2$department
new.data <- full_join(grade_data, test, by = c("department" == "abr"))
# new_data <- grade_data %>% group_by(department, department_name, Term) %>% summarize(classes = n(), class_size = mean(Student_Count), mean_gpa = mean(Average_GPA))
# map <- plot_ly(new_data, x = new_data$class_size, y = new_data$mean_gpa, color = "blue")
my.data <- grade_data2 %>%
select(department, department_name) %>%
filter(department_name != NA)
View(major.table)
View(grade_data2)
test$abr <- grade_data2$department
test <- as.data.frame(grade_data2$department_name)
test$abr <- grade_data2$department
typeof(test$abr)
test$abr <- grade_data2$department
View(test)
new.data <- full_join(grade_data, test, by = c("department" == "abr"))
new.data <- full_join(grade_data2, test, by = c("department" == "abr"))
setwd("~/Desktop/Info_201/Group-Project-EasyA")
read.csv('Full Data.csv')
read.csv('full_data.csv')
lala <-read.csv('full_data.csv')
View(lala)
lala2 <- read.csv('grade_data.csv')
View(lala2)
